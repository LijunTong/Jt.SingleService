namespace Jt.Cms.Core
{
    public class Constrant
    {
        public static readonly Dictionary<string, string> DicMysqlFieldMap = new Dictionary<string, string>()
            {
                {"int","Int32"},
                {"bigint","Int64"},
                {"binary","Byte[]"},
                {"bit","Boolean"},
                {"char","string"},
                {"nchar","string"},
                 {"varchar","string"},
                 {"text","string"},
                {"nvarchar","string"},
                {"datetime","DateTime"},
                {"decimal","Decimal"},
                {"float","Double"},
                {"image","Byte[]"},
                {"money","Decimal"},
                {"ntext","string"},
                {"real","Single"},
                {"smalldatetime","DateTime"},
                {"smallint","Int16"},
                {"smallmoney","Decimal"},
                {"timestamp","DateTime"},
                {"tinyint","Byte"},
                {"uniqueidentifier","Guid"},
                {"varbinary","Byte[]"},
                {"Variant","Object"}
            };
        public static readonly Dictionary<string, string> DicSqlServerFieldMap = new Dictionary<string, string>()
        {
            {"int","Int32"},
            {"text","string"},
            {"bigint","Int64"},
            {"binary","byte[]"},
            {"bit","bool"},
            {"char","string"},
            {"datetime","DateTime"},
            {"decimal","decimal"},
            {"float","double"},
            {"image","byte[]"},
            {"money","Decimal"},
            {"nchar","string"},
            {"ntext","string"},
            {"numeric","Decimal"},
            {"nvarchar","string"},
            {"real","Single"},
            {"smalldatetime","DateTime"},
            {"smallint","Int16"},
            {"smallmoney","Decimal"},
            {"timestamp","DateTime"},
            {"tinyint","byte"},
            {"uniqueidentifier","Guid"},
            {"varbinary","byte[]"},
            {"varchar","string"},
            {"Variant","object"},
        };
        public static readonly Dictionary<string, string> DicPostgreSQLFieldMap = new Dictionary<string, string>()
        {
             {"bool","bool"},
            {"int2","short"},
            {"int4","int"},
            {"int8","long"},
            {"float4","float"},
            {"float8","double"},
            {"numeric","decimal"},
            {"money","decimal"},
            {"text","string"},
            {"varchar","string"},
            {"bpchar","string"},
            {"citext","string"},
            {"json","string"},
            {"jsonb","string"},
            {"xml","string"},
            {"point","NpgsqlPoint"},
            {"lseg","NpgsqlLSeg"},
            {"path","NpgsqlPath"},
            {"polygon","NpgsqlPolygon"},
            {"line","NpgsqlLine"},
            {"circle","NpgsqlCircle"},
            {"box","NpgsqlBox"},
            {"bit(1)","bool"},
            {"bit(n)","BitArray"},
            {"varbit","BitArray"},
            {"hstore","IDictionary<string, string>"},
            {"uuid","Guid"},
            {"cidr","NpgsqlInet"},
            {"inet","IPAddress"},
            {"macaddr","PhysicalAddress"},
            {"tsquery","NpgsqlTsQuery"},
            {"tsvector","NpgsqlTsVector"},
            {"date","DateTime"},
            {"interval","TimeSpan"},
            {"timestamp","DateTime"},
            {"timestamptz","DateTime"},
            {"time","TimeSpan"},
            {"timetz","DateTimeOffset"},
            {"bytea","byte[]"},
            {"oid","uint"},
            {"xid","uint"},
            {"cid","uint"},
            {"oidvector","uint[]"},
            {"name","string"},
            {"(internal) char","char"},
            {"geometry (PostGIS)","PostgisGeometry"},
            {"record","object[]"},
            {"composite types","T"},
            {"range subtypes","NpgsqlRange"},
            {"enum types","TEnum"},
            {"array types","Array"},
        };
    }

}
